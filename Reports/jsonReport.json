[
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-06-29T15:38:05.238Z",
        "before": [
          {
            "result": {
              "duration": 3145001300,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.setUp()"
            }
          }
        ],
        "line": 20,
        "name": "As a user I should be able to enter values and use all the fields on the Add Trade page.",
        "description": "",
        "id": "create-add-trade-functionality;as-a-user-i-should-be-able-to-enter-values-and-use-all-the-fields-on-the-add-trade-page.;;2",
        "after": [
          {
            "result": {
              "duration": 1111646100,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1715652000,
              "status": "passed"
            },
            "line": 7,
            "name": "I am external user logged in to the Stock Trade Tracking application",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_am_external_user_logged_in_to_the_stock_trade_tracking_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 328478700,
              "status": "passed"
            },
            "line": 8,
            "name": "I click on the Add a Trade button",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_click_on_the_add_a_trade_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 59838500,
              "status": "passed"
            },
            "line": 9,
            "name": "I should be directed to a new page with Save Trade as the page heading",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_should_be_directed_to_a_new_page_with_save_trade_as_the_page_heading()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 336277000,
              "status": "passed"
            },
            "line": 10,
            "name": "Drop Down with the following options \"Sell to Open\" selected by default and \"Buy to Open\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Sell to Open\"",
                  "offset": 37
                },
                {
                  "val": "\"Buy to Open\"",
                  "offset": 76
                }
              ],
              "location": "step_definitions.AddTradeFields.drop_down_with_the_following_options_selected_by_default_and(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 158574900,
              "status": "passed"
            },
            "line": 11,
            "name": "Symbol textbox which accepts a string \"WER-GH-5fO\" 10 characters in length",
            "match": {
              "arguments": [
                {
                  "val": "\"WER-GH-5fO\"",
                  "offset": 38
                },
                {
                  "val": "10",
                  "offset": 51
                }
              ],
              "location": "step_definitions.AddTradeFields.symbol_textbox_which_accepts_a_string_characters_in_length(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 169077200,
              "status": "passed"
            },
            "line": 12,
            "name": "Date1 textbox which accepts a \"06/25/2021\" value typed by the user or a date picked in the calender picker component",
            "match": {
              "arguments": [
                {
                  "val": "\"06/25/2021\"",
                  "offset": 30
                }
              ],
              "location": "step_definitions.AddTradeFields.date1_textbox_which_accepts_a_value_typed_by_the_user_or_a_date_picked_in_the_calender_picker_component(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 172281800,
              "status": "passed"
            },
            "line": 13,
            "name": "Entry price Text box which takes a \"9.99\" value that is a double",
            "match": {
              "arguments": [
                {
                  "val": "\"9.99\"",
                  "offset": 35
                }
              ],
              "location": "step_definitions.AddTradeFields.entry_price_text_box_which_takes_a_value_that_is_a_double(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 217575900,
              "status": "passed"
            },
            "line": 14,
            "name": "Date2 textbox which accepts a \"10/27/2022\" type Date, typed by the user or a date picked in the calender picker component",
            "match": {
              "arguments": [
                {
                  "val": "\"10/27/2022\"",
                  "offset": 30
                }
              ],
              "location": "step_definitions.AddTradeFields.date2_textbox_which_accepts_a_type_date_typed_by_the_user_or_a_date_picked_in_the_calender_picker_component(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 206446600,
              "status": "passed"
            },
            "line": 15,
            "name": "Exit price text box which takes a \"500.0\" value that is a double",
            "match": {
              "arguments": [
                {
                  "val": "\"500.0\"",
                  "offset": 34
                }
              ],
              "location": "step_definitions.AddTradeFields.exit_price_text_box_which_takes_a_value_that_is_a_double(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          },
          {
            "name": "@AddTradeFieldsValidation"
          },
          {
            "name": "@SmokeTest"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T15:38:13.129Z",
        "before": [
          {
            "result": {
              "duration": 1927931500,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.setUp()"
            }
          }
        ],
        "line": 41,
        "name": "As a user I should be able to provide valid data to all the fields and save them.",
        "description": "",
        "id": "create-add-trade-functionality;as-a-user-i-should-be-able-to-provide-valid-data-to-all-the-fields-and-save-them.;;2",
        "after": [
          {
            "result": {
              "duration": 1310170700,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1552618400,
              "status": "passed"
            },
            "line": 26,
            "name": "I am external user logged in to the Stock Trade Tracking application",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_am_external_user_logged_in_to_the_stock_trade_tracking_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 298957300,
              "status": "passed"
            },
            "line": 27,
            "name": "I click on the Add a Trade button",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_click_on_the_add_a_trade_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62122400,
              "status": "passed"
            },
            "line": 28,
            "name": "I should be directed to a new page with Save Trade as the page heading",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_should_be_directed_to_a_new_page_with_save_trade_as_the_page_heading()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 126408400,
              "status": "passed"
            },
            "line": 29,
            "name": "I select \"Sell to Open\" on the dropdown",
            "match": {
              "arguments": [
                {
                  "val": "\"Sell to Open\"",
                  "offset": 9
                }
              ],
              "location": "step_definitions.SaveTradeDBValidation.i_select_on_the_dropdown(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 153352400,
              "status": "passed"
            },
            "line": 30,
            "name": "I enter \"FF-TY\" on the Symbol field",
            "match": {
              "arguments": [
                {
                  "val": "\"FF-TY\"",
                  "offset": 8
                }
              ],
              "location": "step_definitions.SaveTradeDBValidation.i_enter_on_the_symbol_field(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 108654900,
              "status": "passed"
            },
            "line": 31,
            "name": "I enter \"06/25/2021\" in the entry date field",
            "match": {
              "arguments": [
                {
                  "val": "\"06/25/2021\"",
                  "offset": 8
                }
              ],
              "location": "step_definitions.SaveTradeDBValidation.i_enter_in_the_entry_date_field(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 97907300,
              "status": "passed"
            },
            "line": 32,
            "name": "I enter \"9.99\" for the entry price field",
            "match": {
              "arguments": [
                {
                  "val": "\"9.99\"",
                  "offset": 8
                }
              ],
              "location": "step_definitions.SaveTradeDBValidation.i_enter_for_the_entry_price_field(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 115263500,
              "status": "passed"
            },
            "line": 33,
            "name": "I enter \"10/27/2022\" in the closing date field",
            "match": {
              "arguments": [
                {
                  "val": "\"10/27/2022\"",
                  "offset": 8
                }
              ],
              "location": "step_definitions.SaveTradeDBValidation.i_enter_in_the_closing_date_field(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97908100,
              "status": "passed"
            },
            "line": 34,
            "name": "I enter \"500.0\" to the exit price field",
            "match": {
              "arguments": [
                {
                  "val": "\"500.0\"",
                  "offset": 8
                }
              ],
              "location": "step_definitions.SaveTradeDBValidation.i_enter_to_the_exit_price_field(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 234992800,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on Save button",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_click_on_save_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 60823500,
              "status": "passed"
            },
            "line": 36,
            "name": "there are no issues with the fields submitted",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.there_are_no_issues_with_the_fields_submitted()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1189417400,
              "status": "passed"
            },
            "line": 37,
            "name": "The trade information entered by the user should be saved in the application database.",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.the_trade_information_entered_by_the_user_should_be_saved_in_the_application_database()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          },
          {
            "name": "@SaveTradeWithDBValidation"
          },
          {
            "name": "@SmokeTest"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T15:38:20.498Z",
        "before": [
          {
            "result": {
              "duration": 1920777300,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.setUp()"
            }
          }
        ],
        "line": 42,
        "name": "As a user I should be able to provide valid data to all the fields and save them.",
        "description": "",
        "id": "create-add-trade-functionality;as-a-user-i-should-be-able-to-provide-valid-data-to-all-the-fields-and-save-them.;;3",
        "after": [
          {
            "result": {
              "duration": 1361754600,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1683294100,
              "status": "passed"
            },
            "line": 26,
            "name": "I am external user logged in to the Stock Trade Tracking application",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_am_external_user_logged_in_to_the_stock_trade_tracking_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 291709000,
              "status": "passed"
            },
            "line": 27,
            "name": "I click on the Add a Trade button",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_click_on_the_add_a_trade_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 43883800,
              "status": "passed"
            },
            "line": 28,
            "name": "I should be directed to a new page with Save Trade as the page heading",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_should_be_directed_to_a_new_page_with_save_trade_as_the_page_heading()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 107735500,
              "status": "passed"
            },
            "line": 29,
            "name": "I select \"Buy to Open\" on the dropdown",
            "match": {
              "arguments": [
                {
                  "val": "\"Buy to Open\"",
                  "offset": 9
                }
              ],
              "location": "step_definitions.SaveTradeDBValidation.i_select_on_the_dropdown(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 107711700,
              "status": "passed"
            },
            "line": 30,
            "name": "I enter \"TY-bbnt-34\" on the Symbol field",
            "match": {
              "arguments": [
                {
                  "val": "\"TY-bbnt-34\"",
                  "offset": 8
                }
              ],
              "location": "step_definitions.SaveTradeDBValidation.i_enter_on_the_symbol_field(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 120090600,
              "status": "passed"
            },
            "line": 31,
            "name": "I enter \"06/27/2021\" in the entry date field",
            "match": {
              "arguments": [
                {
                  "val": "\"06/27/2021\"",
                  "offset": 8
                }
              ],
              "location": "step_definitions.SaveTradeDBValidation.i_enter_in_the_entry_date_field(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 111439600,
              "status": "passed"
            },
            "line": 32,
            "name": "I enter \"113.55\" for the entry price field",
            "match": {
              "arguments": [
                {
                  "val": "\"113.55\"",
                  "offset": 8
                }
              ],
              "location": "step_definitions.SaveTradeDBValidation.i_enter_for_the_entry_price_field(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 105665500,
              "status": "passed"
            },
            "line": 33,
            "name": "I enter \"10/27/2023\" in the closing date field",
            "match": {
              "arguments": [
                {
                  "val": "\"10/27/2023\"",
                  "offset": 8
                }
              ],
              "location": "step_definitions.SaveTradeDBValidation.i_enter_in_the_closing_date_field(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 118702900,
              "status": "passed"
            },
            "line": 34,
            "name": "I enter \"45.56\" to the exit price field",
            "match": {
              "arguments": [
                {
                  "val": "\"45.56\"",
                  "offset": 8
                }
              ],
              "location": "step_definitions.SaveTradeDBValidation.i_enter_to_the_exit_price_field(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 228433400,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on Save button",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_click_on_save_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 61438400,
              "status": "passed"
            },
            "line": 36,
            "name": "there are no issues with the fields submitted",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.there_are_no_issues_with_the_fields_submitted()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 564180000,
              "status": "passed"
            },
            "line": 37,
            "name": "The trade information entered by the user should be saved in the application database.",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.the_trade_information_entered_by_the_user_should_be_saved_in_the_application_database()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          },
          {
            "name": "@SaveTradeWithDBValidation"
          },
          {
            "name": "@SmokeTest"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T15:38:27.359Z",
        "before": [
          {
            "result": {
              "duration": 1832359100,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.setUp()"
            }
          }
        ],
        "line": 45,
        "name": "as a user I should be promted a",
        "description": "     warning message whenever I enter invalid data or leave a field empty",
        "id": "create-add-trade-functionality;as-a-user-i-should-be-promted-a",
        "after": [
          {
            "result": {
              "duration": 895632800,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1502602000,
              "status": "passed"
            },
            "line": 47,
            "name": "I am external user logged in to the Stock Trade Tracking application",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_am_external_user_logged_in_to_the_stock_trade_tracking_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 335383400,
              "status": "passed"
            },
            "line": 48,
            "name": "I click on the Add a Trade button",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_click_on_the_add_a_trade_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 42886500,
              "status": "passed"
            },
            "line": 49,
            "name": "I should be directed to a new page with Save Trade as the page heading",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_should_be_directed_to_a_new_page_with_save_trade_as_the_page_heading()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 76823900,
              "status": "passed"
            },
            "line": 50,
            "name": "I click on Save button",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_click_on_save_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 68311600,
              "status": "passed"
            },
            "line": 51,
            "name": "the system should display the error message \"Please fill out this field.\" for the Symbol input field",
            "match": {
              "arguments": [
                {
                  "val": "\"Please fill out this field.\"",
                  "offset": 44
                }
              ],
              "location": "step_definitions.AddTradeInvalidTest.the_system_should_display_the_error_message_for_the_symbol_input_field(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 80271300,
              "status": "passed"
            },
            "line": 52,
            "name": "I enter \"AMZN-AWS\" for the Symbol",
            "match": {
              "arguments": [
                {
                  "val": "\"AMZN-AWS\"",
                  "offset": 8
                }
              ],
              "location": "step_definitions.AddTradeInvalidTest.i_enter_for_the_symbol(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 55879100,
              "status": "passed"
            },
            "line": 53,
            "name": "I click on Save button",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_click_on_save_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29919400,
              "status": "passed"
            },
            "line": 54,
            "name": "the system should display the error message \"Please fill out this field.\" for the Entry Date input field",
            "match": {
              "arguments": [
                {
                  "val": "\"Please fill out this field.\"",
                  "offset": 44
                }
              ],
              "location": "step_definitions.AddTradeInvalidTest.the_system_should_display_the_error_message_for_the_entry_date_input_field(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 240103300,
              "status": "passed"
            },
            "line": 55,
            "name": "I enter \"01/04/2021\" in the Entry date field and \"15\" in the entry price field",
            "match": {
              "arguments": [
                {
                  "val": "\"01/04/2021\"",
                  "offset": 8
                },
                {
                  "val": "\"15\"",
                  "offset": 49
                }
              ],
              "location": "step_definitions.AddTradeInvalidTest.i_enter_in_the_entry_date_field_and_in_the_entry_price_field(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98735300,
              "status": "passed"
            },
            "line": 56,
            "name": "I click on Save button",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_click_on_save_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41885700,
              "status": "passed"
            },
            "line": 57,
            "name": "the system should display the error message \"Please fill out this field.\" for the Exit Date input field",
            "match": {
              "arguments": [
                {
                  "val": "\"Please fill out this field.\"",
                  "offset": 44
                }
              ],
              "location": "step_definitions.AddTradeInvalidTest.the_system_should_display_the_error_message_for_the_exit_date_input_field(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 128710400,
              "status": "passed"
            },
            "line": 58,
            "name": "I enter \"05/07/2022\" in the Exit Date input field",
            "match": {
              "arguments": [
                {
                  "val": "\"05/07/2022\"",
                  "offset": 8
                }
              ],
              "location": "step_definitions.AddTradeInvalidTest.i_enter_in_the_exit_date_input_field(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 76275600,
              "status": "passed"
            },
            "line": 59,
            "name": "I click on Save button",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_click_on_save_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 44814000,
              "status": "passed"
            },
            "line": 60,
            "name": "the system should display the error message \"Please fill out this field.\" for the Exit Price input field",
            "match": {
              "arguments": [
                {
                  "val": "\"Please fill out this field.\"",
                  "offset": 44
                }
              ],
              "location": "step_definitions.AddTradeInvalidTest.the_system_should_display_the_error_message_for_the_exit_proce_input_field(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          },
          {
            "name": "@SaveTradeINVALID"
          },
          {
            "name": "@SmokeTest"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T15:38:32.967Z",
        "before": [
          {
            "result": {
              "duration": 1952557200,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.setUp()"
            }
          }
        ],
        "line": 63,
        "name": "As a user I should be able to see all my saved transactions on the Trade table",
        "description": "",
        "id": "create-add-trade-functionality;as-a-user-i-should-be-able-to-see-all-my-saved-transactions-on-the-trade-table",
        "after": [
          {
            "result": {
              "duration": 1184774800,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1535567100,
              "status": "passed"
            },
            "line": 64,
            "name": "I am external user logged in to the Stock Trade Tracking application",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_am_external_user_logged_in_to_the_stock_trade_tracking_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 266837000,
              "status": "passed"
            },
            "line": 65,
            "name": "I click on the Add a Trade button",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_click_on_the_add_a_trade_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40998900,
              "status": "passed"
            },
            "line": 66,
            "name": "I should be directed to a new page with Save Trade as the page heading",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_should_be_directed_to_a_new_page_with_save_trade_as_the_page_heading()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 828444900,
              "status": "passed"
            },
            "line": 67,
            "name": "I have Saved a trade with following data",
            "match": {
              "location": "step_definitions.TradeTableSavedDataValidation.i_have_saved_a_trade_with_following_data(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Buy to Open",
                  "ARDB-RT",
                  "06/27/2021",
                  "13.55",
                  "10/27/2023",
                  "45.56"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85767800,
              "status": "passed"
            },
            "line": 69,
            "name": "I should be directed to the home page",
            "match": {
              "location": "step_definitions.TradeTableSavedDataValidation.i_should_be_directed_to_the_home_page()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 204447600,
              "status": "passed"
            },
            "line": 70,
            "name": "I click on the Add a Trade button",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_click_on_the_add_a_trade_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 31931200,
              "status": "passed"
            },
            "line": 71,
            "name": "I should be directed to a new page with Save Trade as the page heading",
            "match": {
              "location": "step_definitions.SaveTradeDBValidation.i_should_be_directed_to_a_new_page_with_save_trade_as_the_page_heading()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 180683400,
              "status": "passed"
            },
            "line": 72,
            "name": "I click on the Back to Transactions Link,",
            "match": {
              "location": "step_definitions.TradeTableSavedDataValidation.i_click_on_the_back_to_transactions_link()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 89818000,
              "status": "passed"
            },
            "line": 73,
            "name": "I should be directed to the home page",
            "match": {
              "location": "step_definitions.TradeTableSavedDataValidation.i_should_be_directed_to_the_home_page()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 489339100,
              "status": "passed"
            },
            "line": 74,
            "name": "I should see all the data that I entered and saved in the Save Trade page",
            "match": {
              "location": "step_definitions.TradeTableSavedDataValidation.i_should_see_all_the_data_that_i_entered_and_saved_in_the_save_trade_page()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27924600,
              "status": "passed"
            },
            "line": 75,
            "name": "Gain Loss value should be equal to 45.56 decreased by 13.55 devided by entry price times 100 and rounded to one decimal place",
            "match": {
              "arguments": [
                {
                  "val": "45.56",
                  "offset": 35
                },
                {
                  "val": "13.55",
                  "offset": 54
                },
                {
                  "val": "100",
                  "offset": 89
                }
              ],
              "location": "step_definitions.TradeTableSavedDataValidation.gain_loss_value_should_be_equal_to_decreased_by_devided_by_entry_price_times_and_rounded_to_one_decimal_place(java.lang.Double,java.lang.Double,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21943200,
              "status": "passed"
            },
            "line": 76,
            "name": "If the Gain/Loss value results in Gain then the row should be in black font if its Loss then the row should be in red font",
            "match": {
              "location": "step_definitions.TradeTableSavedDataValidation.if_the_gain_loss_value_results_in_gain_then_the_row_should_be_in_black_font_if_its_loss_then_the_row_should_be_in_red_font()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 339915900,
              "status": "passed"
            },
            "line": 77,
            "name": "Action Column with \"Update\" and \"Delete\" buttons",
            "match": {
              "arguments": [
                {
                  "val": "\"Update\"",
                  "offset": 19
                },
                {
                  "val": "\"Delete\"",
                  "offset": 32
                }
              ],
              "location": "step_definitions.TradeTableSavedDataValidation.action_column_with_and_buttons(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          },
          {
            "name": "@BackToTransactionFunctionality"
          },
          {
            "name": "@SmokeTest"
          }
        ]
      }
    ],
    "name": "Create Add Trade Functionality",
    "description": "  As a user I should be able to add a trade and track all its data on the trade table.",
    "id": "create-add-trade-functionality",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/AddTradeFunctionality.feature",
    "tags": [
      {
        "name": "@Regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1402747800,
              "status": "passed"
            },
            "line": 5,
            "name": "I am logged into the Trade Journal Application",
            "match": {
              "location": "step_definitions.LogoutFunctionalityTestSteps.i_am_logged_into_the_trade_journal_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 86772700,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on the homepage",
            "match": {
              "location": "step_definitions.LogoutFunctionalityTestSteps.i_am_on_the_homepage()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T15:38:40.282Z",
        "before": [
          {
            "result": {
              "duration": 1763643400,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.setUp()"
            }
          }
        ],
        "line": 8,
        "name": "Logout Functionality",
        "description": "    As a user I should be able to logout of my account",
        "id": "trade-journal-logout-functionality;logout-functionality",
        "after": [
          {
            "result": {
              "duration": 895522400,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 162742100,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Logout button",
            "match": {
              "location": "step_definitions.LogoutFunctionalityTestSteps.i_click_the_logout_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 75824200,
              "status": "passed"
            },
            "line": 12,
            "name": "I should be on a new page",
            "match": {
              "location": "step_definitions.LogoutFunctionalityTestSteps.i_should_be_on_a_new_page()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29917400,
              "status": "passed"
            },
            "line": 13,
            "name": "see the following message: \"Are you sure you want to log out?\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Are you sure you want to log out?\"",
                  "offset": 27
                }
              ],
              "location": "step_definitions.LogoutFunctionalityTestSteps.see_the_following_message(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 175532200,
              "status": "passed"
            },
            "line": 14,
            "name": "I click the LogoutPage button",
            "match": {
              "location": "step_definitions.LogoutFunctionalityTestSteps.i_click_the_logoutPage_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 44878000,
              "status": "passed"
            },
            "line": 15,
            "name": "I should be succesfully logged out",
            "match": {
              "location": "step_definitions.LogoutFunctionalityTestSteps.i_should_be_succesfully_logged_out()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 37228400,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the Trade Journal Login page",
            "match": {
              "location": "step_definitions.LogoutFunctionalityTestSteps.i_should_see_the_trade_journal_login_page()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@LogoutTest"
          }
        ]
      }
    ],
    "name": "Trade Journal Logout functionality",
    "description": "",
    "id": "trade-journal-logout-functionality",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/LogoutFunctionality.feature",
    "tags": [
      {
        "name": "@Regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1497302500,
              "status": "passed"
            },
            "line": 5,
            "name": "I am logged in tot the Stock Trade applications",
            "match": {
              "location": "step_definitions.SearchFunctionalityTestSteps.i_am_logged_in_tot_the_stock_trade_applications()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 88762500,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on the TJ home page",
            "match": {
              "location": "step_definitions.SearchFunctionalityTestSteps.i_am_on_the_tj_home_page()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T15:38:45.059Z",
        "before": [
          {
            "result": {
              "duration": 2006757300,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.setUp()"
            }
          }
        ],
        "line": 9,
        "name": "search functionality valid Symbol test",
        "description": "",
        "id": "trade-jorunal-search-functionality-valid-tests;search-functionality-valid-symbol-test",
        "after": [
          {
            "result": {
              "duration": 872806900,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 10,
            "name": "I enter a value for ‘Symbol\u0027 textbox,",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "I click on the \u0027Search’ Button",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "The system should filter the existing list of trades associated with the Symbol",
            "match": {},
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "Once the system fetches the records it should only display the records matching the user’s filters.",
            "match": {},
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@SearchFunctionalitySymobl"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1367501300,
              "status": "passed"
            },
            "line": 5,
            "name": "I am logged in tot the Stock Trade applications",
            "match": {
              "location": "step_definitions.SearchFunctionalityTestSteps.i_am_logged_in_tot_the_stock_trade_applications()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 255299900,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on the TJ home page",
            "match": {
              "location": "step_definitions.SearchFunctionalityTestSteps.i_am_on_the_tj_home_page()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T15:38:49.616Z",
        "before": [
          {
            "result": {
              "duration": 1954470000,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.setUp()"
            }
          }
        ],
        "line": 16,
        "name": "search functionality valid date test",
        "description": "",
        "id": "trade-jorunal-search-functionality-valid-tests;search-functionality-valid-date-test",
        "after": [
          {
            "result": {
              "duration": 903682000,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 17,
            "name": "I enter a value for ‘Date\u0027 textbox,",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 18,
            "name": "I click on the \u0027Search’ Button",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "duration": 997200,
              "status": "skipped"
            },
            "line": 19,
            "name": "The system should filter the existing list of trades associated with the Date",
            "match": {
              "location": "step_definitions.SearchFunctionalityTestSteps.the_system_should_filter_the_existing_list_of_trades_associated_with_the_date()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "Once the system fetches the records it should only display the records matching the user’s filters.",
            "match": {},
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@SearchFunctionalityDate"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1513014000,
              "status": "passed"
            },
            "line": 5,
            "name": "I am logged in tot the Stock Trade applications",
            "match": {
              "location": "step_definitions.SearchFunctionalityTestSteps.i_am_logged_in_tot_the_stock_trade_applications()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 92751800,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on the TJ home page",
            "match": {
              "location": "step_definitions.SearchFunctionalityTestSteps.i_am_on_the_tj_home_page()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T15:38:54.140Z",
        "before": [
          {
            "result": {
              "duration": 1961011700,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.setUp()"
            }
          }
        ],
        "line": 23,
        "name": "search functionality valid symbol and date test",
        "description": "",
        "id": "trade-jorunal-search-functionality-valid-tests;search-functionality-valid-symbol-and-date-test",
        "after": [
          {
            "result": {
              "duration": 1007051900,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 24,
            "name": "I enter a value for ‘Symbol\u0027 textbox,",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "I enter a value for \u0027Date\u0027 textbox",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "I click on the \u0027Search’ Button",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "The system should filter the existing list of trades associated with the Symbol and DATE",
            "match": {
              "location": "step_definitions.SearchFunctionalityTestSteps.the_system_should_filter_the_existing_list_of_trades_associated_with_the_symbol_and_date()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "Once the system fetches the records it should only display the records matching the user’s filters.",
            "match": {},
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@SearchFunctionalitySymbolDate"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1384569200,
              "status": "passed"
            },
            "line": 5,
            "name": "I am logged in tot the Stock Trade applications",
            "match": {
              "location": "step_definitions.SearchFunctionalityTestSteps.i_am_logged_in_tot_the_stock_trade_applications()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 78787200,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on the TJ home page",
            "match": {
              "location": "step_definitions.SearchFunctionalityTestSteps.i_am_on_the_tj_home_page()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T15:38:58.750Z",
        "before": [
          {
            "result": {
              "duration": 2016044000,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.setUp()"
            }
          }
        ],
        "line": 31,
        "name": "search functionality no matching records",
        "description": "",
        "id": "trade-jorunal-search-functionality-valid-tests;search-functionality-no-matching-records",
        "after": [
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png",
                "name": "screenshot"
              }
            ],
            "result": {
              "duration": 1659834300,
              "status": "passed"
            },
            "match": {
              "location": "step_definitions.Hook.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 99216100,
              "status": "passed"
            },
            "line": 32,
            "name": "I enter a Symbol or date",
            "match": {
              "location": "step_definitions.SearchFunctionalityTestSteps.i_enter_a_symbol_or_date()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10110700000,
              "status": "passed"
            },
            "line": 33,
            "name": "there are no matching records",
            "match": {
              "location": "step_definitions.SearchFunctionalityTestSteps.there_are_no_matching_records()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div/table/tbody/tr/td[8]/a[1]\"}\n  (Session info: chrome\u003d91.0.4472.124)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-GV2C5M4\u0027, ip: \u0027192.168.1.233\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002715.0.2\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.124, chrome: {chromedriverVersion: 91.0.4472.101 (af52a90bf870..., userDataDir: C:\\Users\\IHSANS~1\\AppData\\L...}, goog:chromeOptions: {debuggerAddress: localhost:64101}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}\nSession ID: 07683ddbc9750a22994ae64b810f6001\n*** Element info: {Using\u003dxpath, value\u003d/html/body/div/table/tbody/tr/td[8]/a[1]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy19.isDisplayed(Unknown Source)\r\n\tat step_definitions.SearchFunctionalityTestSteps.the_system_should_display_an_empty_table(SearchFunctionalityTestSteps.java:201)\r\n\tat ✽.the system should display an empty table(file:///C:/Users/Ihsan%20Sadak/RealCucumberFrameworkRepo/./src/test/resources/features/SearchFunctionalityValid.feature:34)\r\n",
              "duration": 10063576400,
              "status": "failed"
            },
            "line": 34,
            "name": "the system should display an empty table",
            "match": {
              "location": "step_definitions.SearchFunctionalityTestSteps.the_system_should_display_an_empty_table()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@SearchFunctionalityNoMatch"
          }
        ]
      }
    ],
    "name": "Trade Jorunal Search Functionality Valid tests",
    "description": "",
    "id": "trade-jorunal-search-functionality-valid-tests",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/SearchFunctionalityValid.feature",
    "tags": [
      {
        "name": "@Regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]